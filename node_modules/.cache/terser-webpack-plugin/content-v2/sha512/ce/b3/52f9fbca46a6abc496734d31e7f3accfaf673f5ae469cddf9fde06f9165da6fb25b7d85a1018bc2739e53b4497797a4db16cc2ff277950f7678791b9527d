{"map":"{\"version\":3,\"sources\":[\"/home/user/Bureau/Markdown-app/markdown-app/src/sampleText.js\",\"/home/user/Bureau/Markdown-app/markdown-app/src/App.js\",\"/home/user/Bureau/Markdown-app/markdown-app/src/serviceWorker.js\",\"/home/user/Bureau/Markdown-app/markdown-app/src/index.js\"],\"names\":[\"sampleText\",\"App\",\"state\",\"text\",\"handleChange\",\"event\",\"target\",\"value\",\"_this\",\"setState\",\"renderText\",\"__html\",\"marked\",\"sanitize\",\"localStorage\",\"getItem\",\"this\",\"setItem\",\"react_default\",\"a\",\"createElement\",\"className\",\"onChange\",\"rows\",\"dangerouslySetInnerHTML\",\"Component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"mQAAaA,SAAa,ujBC2DXC,6MArDbC,MAAQ,CACNC,KAAMH,KAmBVI,aAAe,SAAAC,GACb,IAAMF,EAAOE,EAAMC,OAAOC,MAC1BC,EAAKC,SAAS,CAACN,KAAAA,OAGjBO,WAAa,SAAAP,GAEZ,MAAM,CAACQ,OADOC,GAAAA,CAAOT,EAAM,CAACU,UAAU,yFArBvC,IAAMV,EAAOW,aAAaC,QAAQ,QAClCC,KAAKP,SAAS,CAACN,KAAAA,IACZA,EACDa,KAAKP,SAAS,CAACN,KAAAA,IAEfa,KAAKP,SAAS,CAACN,KAAMH,iDAID,IACXG,EAAQa,KAAKd,MAAbC,KACPW,aAAaG,QAAQ,OAAQd,oCAc7B,OACEe,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,WAAA,CACAE,SAAWN,KAAKZ,aAChBG,MAAQS,KAAKd,MAAMC,KACjBkB,UAAU,eACVE,KAAK,QAETL,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,MAAA,CAAKI,wBACLR,KAAKN,WAAWM,KAAKd,MAAMC,kBA3CrBsB,EAAAA,WCOEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,EAAAA,EAASC,OAAOd,EAAAC,EAAAC,cAACa,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC\",\"sourcesContent\":[\"export const sampleText = '# Titre\\\\n## Sous-Titre \\\\n### Titre plus profond\\\\n \\\\nLes paragraphes sont séparés\\\\npar une ligne vide.\\\\n\\\\nLaissé deux espaces à la fin d\\\\'une ligne pour  \\\\naller à la ligne.\\\\n\\\\nAttributs *italique*, **gras**, \\\\n`monospace`, ~~rayé~~.\\\\n\\\\nListe:\\\\n\\\\n  * pommes\\\\n  * oranges\\\\n  * poires\\\\n\\\\nListe numérotée:\\\\n\\\\n  1. jambon\\\\n  2. cornichon\\\\n  3. pain\\\\n\\\\n *[Anthony Welc](https://www.youtube.com/channel/UChhPkjgG1-iLUOmURGdgQrw)* \\\\n\\\\n Lien automatique : https://www.facebook.com/anthonywelc/ \\\\n\\\\n```\\\\n console.log(\\\"hello\\\"); \\\\n``` '\\n\",\"import React, {Component} from 'react';\\nimport './App.css';\\nimport { sampleText } from './sampleText'\\nimport marked from 'marked'\\n\\nclass App extends Component {\\n  state = {\\n    text: sampleText\\n  }\\n\\n  componentDidMount() {\\nconst text = localStorage.getItem('text')\\nthis.setState({text})\\nif(text){\\n  this.setState({text})\\n}else{\\n  this.setState({text: sampleText})\\n}\\n  }\\n\\n  componentDidUpdate(){\\n    const {text} = this.state\\n    localStorage.setItem('text', text) \\n    \\n  }\\n\\nhandleChange = event => {\\n  const text = event.target.value\\n  this.setState({text})\\n}\\n\\nrenderText = text => {\\n const __html= marked(text, {sanitize: true})\\n return{__html}\\n}\\n  render() {\\n    return (\\n      <div className=\\\"container\\\">\\n        <div className=\\\"row\\\">\\n          <div className=\\\"col-sm-6\\\">\\n            <textarea\\n            onChange= {this.handleChange} \\n            value={ this.state.text}\\n              className='form-control' \\n              rows=\\\"35\\\"/>\\n          </div>\\n          <div className=\\\"col-sm-6\\\">\\n            <div dangerouslySetInnerHTML= {\\n            this.renderText(this.state.text)}/>\\n\\n            \\n          </div>\\n        </div>\\n      </div>\\n    \\n    )\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import 'bootstrap/dist/css/bootstrap.min.css';\\nimport React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{10:function(e,t,n){e.exports=n(18)},16:function(e,t,n){},17:function(e,t,n){},18:function(e,t,n){\"use strict\";n.r(t);n(11);var a=n(0),o=n.n(a),r=n(3),s=n.n(r),i=(n(16),n(4)),c=n(5),l=n(8),u=n(6),m=n(9),h=(n(17),'# Titre\\n## Sous-Titre \\n### Titre plus profond\\n \\nLes paragraphes sont s\\xe9par\\xe9s\\npar une ligne vide.\\n\\nLaiss\\xe9 deux espaces \\xe0 la fin d\\'une ligne pour  \\naller \\xe0 la ligne.\\n\\nAttributs *italique*, **gras**, \\n`monospace`, ~~ray\\xe9~~.\\n\\nListe:\\n\\n  * pommes\\n  * oranges\\n  * poires\\n\\nListe num\\xe9rot\\xe9e:\\n\\n  1. jambon\\n  2. cornichon\\n  3. pain\\n\\n *[Anthony Welc](https://www.youtube.com/channel/UChhPkjgG1-iLUOmURGdgQrw)* \\n\\n Lien automatique : https://www.facebook.com/anthonywelc/ \\n\\n```\\n console.log(\"hello\"); \\n``` '),d=n(7),p=n.n(d),w=function(e){function t(){var e,n;Object(i.a)(this,t);for(var a=arguments.length,o=new Array(a),r=0;r<a;r++)o[r]=arguments[r];return(n=Object(l.a)(this,(e=Object(u.a)(t)).call.apply(e,[this].concat(o)))).state={text:h},n.handleChange=function(e){var t=e.target.value;n.setState({text:t})},n.renderText=function(e){return{__html:p()(e,{sanitize:!0})}},n}return Object(m.a)(t,e),Object(c.a)(t,[{key:\"componentDidMount\",value:function(){var e=localStorage.getItem(\"text\");this.setState({text:e}),e?this.setState({text:e}):this.setState({text:h})}},{key:\"componentDidUpdate\",value:function(){var e=this.state.text;localStorage.setItem(\"text\",e)}},{key:\"render\",value:function(){return o.a.createElement(\"div\",{className:\"container\"},o.a.createElement(\"div\",{className:\"row\"},o.a.createElement(\"div\",{className:\"col-sm-6\"},o.a.createElement(\"textarea\",{onChange:this.handleChange,value:this.state.text,className:\"form-control\",rows:\"35\"})),o.a.createElement(\"div\",{className:\"col-sm-6\"},o.a.createElement(\"div\",{dangerouslySetInnerHTML:this.renderText(this.state.text)}))))}}]),t}(a.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));s.a.render(o.a.createElement(w,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[10,1,2]]]);","extractedComments":[]}